@model Common.DTO.DtoProducto

@{
    ViewBag.Title = "RegistrarProducto";
}

<h2>Registrar productos</h2>


@using (Html.BeginForm("AddProducto", "Producto")) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.codigoBarras, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.codigoBarras, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.codigoBarras, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Familia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Familia, (ICollection<SelectListItem>)ViewBag.colCategorias, "-- Categoria --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Familia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrecioVenta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrecioVenta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrecioVenta, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProDescripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProDescripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProDescripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagenPro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImagenPro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImagenPro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Agregar" class="btn btn-success" />
            @Html.ActionLink("Listado", "ListarProducto", "Producto", new { @class = "btn btn-primary" })

            <br />
            <br />
            @if (ViewBag.MessageP != null)
            {
                <h4>@Html.Label("", (string)ViewBag.MessageP, new { @class = "label label-primary" })</h4>
            }

        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver al inicio", "Index", "Home", new { @class = "btn btn-info"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
