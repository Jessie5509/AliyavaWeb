@model Common.DTO.DtoCliente
@{
    ViewBag.Title = "Perfil";
}

<h2>Perfil</h2>

@using (@Html.BeginForm("ConfirmarCambios", "Cliente"))
{
    @Html.ValidationSummary(true, "")

    //GOOGLE MAPS

    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 350px;
            width: 550px;
            float: right;
            position: absolute;
            margin-left: 540px;
            margin-top: 0px;
        }
    </style>

    <div id="map"></div>


    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Nombre)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Apellido)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Telefono)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.NombreUsuario)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.contraseña)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.Direccion)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.latitud)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.latitud, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.latitud, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="row form-group">
        <div class="col-md-2">
            @Html.LabelFor(model => model.longitud)
        </div>
        <div class="col-md-5">
            @Html.EditorFor(model => model.longitud, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.longitud, "", new { @class = "text-danger" })
        </div>
    </div>




    <input type="submit" value="Confirmar" class="btn btn-primary" />
    @Html.ActionLink("Cancelar", "Index", "Home", new { @class = "btn btn-danger" })


}

@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")

    @*API*@
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB8BB5_96zmhDpNryv9En4TbunSeXDnHMg&callback=initMap"></script>

    @*GEOLOCATION*@
    <script>
        // Note: This example requires that you consent to location sharing when
        // prompted by your browser. If you see the error "The Geolocation service
        // failed.", it means you probably did not give permission for the browser to
        // locate you.
        var map, infoWindow;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 6
            });
            infoWindow = new google.maps.InfoWindow;

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    infoWindow.setPosition(pos);
                    infoWindow.setContent('Location found.');
                    infoWindow.open(map);
                    map.setCenter(pos);
                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                'Error: The Geolocation service failed.' :
                'Error: Your browser doesn\'t support geolocation.');
            infoWindow.open(map);
        }
    </script>

}